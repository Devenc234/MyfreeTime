Buy-N-Large has to sell quite a lot of small useless goods, and to maximize throughput in their warehouses, they use giant rotating shelves. As item pi arrives, they place it on the top shelf, exactly 1 inch to the right of item piâˆ’1 , or, if the shelf is empty, aligned all the way to left side of the shelf. Each item pi is exactly wi inches wide and each shelf is W inches wide. When they are done putting items on a shelf (which may happen at any time), they rotate the shelf down and begin stocking the shelf above. No item may hang of the edges or the shelves will jam when they reach the un-stocking robots at the bottom of the shelf device (see diagram). At some point in time, the top shelf is empty. Call the next item to arrive p1 . In order to minimize the motion by the robots that stock and unstock the shelves, we want to stock items p1 . . . pP in such a way that the sum of squares of the distance from the rightmost element of a shelf to the right edge of the shelf is minimized. Give an algorithm that decides which items go on which shelves (which is equivalent to deciding between which items to start stocking the next shelf) and minimizes this value. Demonstrate that it is correct.
